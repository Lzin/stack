如何将中缀表达式转成后缀表达式?

具体步骤如下:
1.初始化两个栈，运算符栈s1和储存中间结果的栈s2
2.从左到右扫描中缀表达式
3.遇到操作数的压s2栈
4.遇到运算符，则比较和s1栈顶运算符的优先级
    4-1:如果s1为空，或者栈顶运算符为左括号'(',则直接压s1
    4-2:否则，若优先级比栈顶运算符高，直接压s1
    4-3:否则，将s1栈顶的运算符弹出并压入s2，重复s1比较

5.遇到括号时:
    5-1:如果是左括号,直接压入s1
    5-2:如果是右括号，则依次弹出s1栈顶的运算符，并压入s2，直到遇到左括号为止，此时将这一对括号丢弃

6.重复步骤2-5 直到扫描到表达式的最右边
7.将s1中剩余的运算符依次弹出并压入s2
8.依次弹出s2中的元素并输出,结果的逆序就是中缀表达式对应的后缀表达式


ep:中缀表达式: 1+((2+3)*4)-5 如何进行转变为后缀
    1.初始化两个栈 s1(符号栈) s2(操作数栈)
    2.开始进行扫描
        ...

        s1: + ( ( + )
        s2: 1 2 3
        //已经扫描到了3后面的右括号
        //此时出现第一个变化 注:括号不算是运算符

        s1: + (
        s2: 1 2 3 +

        //继续扫描
        s1: + ( *
        s2: 1 2 3 + 4
        //由于 * 的优先级比+高 所以可以直接进行压栈

        //继续扫描
        s1: +
        s2: 1 2 3 + 4 *
        //这时候已经扫描到了4后的括号

        //继续扫描
        s1: + -
        s2: 1 2 3 + 4 *
        ！！！ 由于+ - 的优先级一致 弹出当前s1栈顶 并且压入s2
        s1: -
        s2: 1 2 3 + 4 * +

        //继续扫描
        s1: -
        s2: 1 2 3 + 4 * + 5

        //已经扫描到了最右边,将s1剩下的运算符弹出 并且压入s2中
        s1: null
        s2: 1 2 3 + 4 * + 5 -

        //最后逆序输出 得到最后的答案
        中缀表达式: 1+((2+3)*4)-5
        后缀表达式: 1 2 3 + 4 * + 5 -
